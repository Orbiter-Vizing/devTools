/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOmniERC20Core,
  IOmniERC20CoreInterface,
} from "../../../../../contracts/DApps/OmniERC20/interface/IOmniERC20Core";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
    ],
    name: "TransferToChain",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "estimateTransferToChainFee",
    outputs: [
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "additionalParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packedMessage",
        type: "bytes",
      },
    ],
    name: "estimateTransferToChainFee",
    outputs: [
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destinationOmniERC20",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "gasLimit",
        type: "uint24",
      },
      {
        internalType: "uint64",
        name: "price",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "fetchTransferMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destinationOmniERC20",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "destChainid",
        type: "uint64",
      },
    ],
    name: "fetchTransferPrice",
    outputs: [
      {
        internalType: "uint64",
        name: "price",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fetchTransferSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveTransferFromOtherChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "additionalParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packedMessage",
        type: "bytes",
      },
    ],
    name: "transferToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IOmniERC20Core__factory {
  static readonly abi = _abi;
  static createInterface(): IOmniERC20CoreInterface {
    return new Interface(_abi) as IOmniERC20CoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOmniERC20Core {
    return new Contract(address, _abi, runner) as unknown as IOmniERC20Core;
  }
}
