/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenWrapped,
  TokenWrappedInterface,
} from "../../../../contracts/DApps/OmniNFTBridge/TokenWrapped";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001d2138038062001d2183398101604081905262000034916200012e565b8181600062000044838262000229565b50600162000053828262000229565b50503360a05250504660805250620002f5565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008e57600080fd5b81516001600160401b0380821115620000ab57620000ab62000066565b604051601f8301601f19908116603f01168101908282118183101715620000d657620000d662000066565b8160405283815260209250866020858801011115620000f457600080fd5b600091505b83821015620001185785820183015181830184015290820190620000f9565b6000602085830101528094505050505092915050565b600080604083850312156200014257600080fd5b82516001600160401b03808211156200015a57600080fd5b62000168868387016200007c565b935060208501519150808211156200017f57600080fd5b506200018e858286016200007c565b9150509250929050565b600181811c90821680620001ad57607f821691505b602082108103620001ce57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000224576000816000526020600020601f850160051c81016020861015620001ff5750805b601f850160051c820191505b8181101562000220578281556001016200020b565b5050505b505050565b81516001600160401b0381111562000245576200024562000066565b6200025d8162000256845462000198565b84620001d4565b602080601f8311600181146200029557600084156200027c5750858301515b600019600386901b1c1916600185901b17855562000220565b600085815260208120601f198616915b82811015620002c657888601518255948401946001909101908401620002a5565b5085821015620002e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516119f1620003306000396000818161029301528181610651015281816106ea0152610765015260006102e001526119f16000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80636352211e116100cd578063b88d4fde11610081578063cd0d009611610066578063cd0d0096146102db578063e985e9c514610302578063ffa1ad741461034b57600080fd5b8063b88d4fde146102b5578063c87b56dd146102c857600080fd5b806395d89b41116100b257806395d89b4114610273578063a22cb4651461027b578063a3c573eb1461028e57600080fd5b80636352211e1461023f57806370a082311461025257600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e1461020657806342966c681461021957806355f804b31461022c57600080fd5b806323b872dd146101e057806340c10f19146101f357600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc14610193578063095ea7b3146101cb575b600080fd5b610169610164366004611427565b610387565b60405190151581526020015b60405180910390f35b61018661046c565b60405161017591906114b2565b6101a66101a13660046114c5565b6104fe565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610175565b6101de6101d9366004611507565b610534565b005b6101de6101ee366004611531565b610543565b6101de610201366004611507565b610639565b6101de610214366004611531565b6106b2565b6101de6102273660046114c5565b6106d2565b6101de61023a36600461156d565b61074d565b6101a661024d3660046114c5565b6107c9565b6102656102603660046115df565b6107d4565b604051908152602001610175565b61018661084f565b6101de6102893660046115fa565b61085e565b6101a67f000000000000000000000000000000000000000000000000000000000000000081565b6101de6102c3366004611665565b610869565b6101866102d63660046114c5565b610880565b6102657f000000000000000000000000000000000000000000000000000000000000000081565b61016961031036600461175f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101866040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061041a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061046657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461047b90611792565b80601f01602080910402602001604051908101604052809291908181526020018280546104a790611792565b80156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b5050505050905090565b6000610509826108e8565b5060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16610466565b61053f828233610947565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216610598576040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b60006105a5838333610954565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610633576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8086166004830152602482018490528216604482015260640161058f565b50505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106a8576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053f8282610ad1565b6106cd83838360405180602001604052806000815250610869565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610741576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074a81610aeb565b50565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146107bc576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60066106cd828483611835565b6000610466826108e8565b600073ffffffffffffffffffffffffffffffffffffffff8216610826576040517f89c62b640000000000000000000000000000000000000000000000000000000081526000600482015260240161058f565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b60606001805461047b90611792565b61053f338383610b4c565b610874848484610543565b61063384848484610c49565b606061088b826108e8565b506000610896610e40565b905060008151116108b657604051806020016040528060008152506108e1565b806108c084610e4f565b6040516020016108d192919061194f565b6040516020818303038152906040525b9392505050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610466576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810184905260240161058f565b6106cd8383836001610f0d565b60008281526002602052604081205473ffffffffffffffffffffffffffffffffffffffff9081169083161561098e5761098e8184866110d8565b73ffffffffffffffffffffffffffffffffffffffff811615610a04576109b8600085600080610f0d565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b73ffffffffffffffffffffffffffffffffffffffff851615610a4d5773ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260409020805460010190555b60008481526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff89811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b61053f828260405180602001604052806000815250611188565b6000610afa6000836000610954565b905073ffffffffffffffffffffffffffffffffffffffff811661053f576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810183905260240161058f565b73ffffffffffffffffffffffffffffffffffffffff8216610bb1576040517f5b08ba1800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161058f565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83163b15610633576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063150b7a0290610cbe90339088908790879060040161197e565b6020604051808303816000875af1925050508015610d17575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d14918101906119c7565b60015b610da6573d808015610d45576040519150601f19603f3d011682016040523d82523d6000602084013e610d4a565b606091505b508051600003610d9e576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161058f565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f150b7a020000000000000000000000000000000000000000000000000000000014610e39576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161058f565b5050505050565b60606006805461047b90611792565b60606000610e5c8361119f565b600101905060008167ffffffffffffffff811115610e7c57610e7c611636565b6040519080825280601f01601f191660200182016040528015610ea6576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610eb057509392505050565b8080610f2e575073ffffffffffffffffffffffffffffffffffffffff821615155b15611083576000610f3e846108e8565b905073ffffffffffffffffffffffffffffffffffffffff831615801590610f9157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610fd0575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209387168352929052205460ff16155b1561101f576040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161058f565b811561108157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6110e3838383611281565b6106cd5773ffffffffffffffffffffffffffffffffffffffff8316611137576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810182905260240161058f565b6040517f177e802f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024810182905260440161058f565b6111928383611348565b6106cd6000848484610c49565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106111e8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611214576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061123257662386f26fc10000830492506010015b6305f5e100831061124a576305f5e100830492506008015b612710831061125e57612710830492506004015b60648310611270576064830492506002015b600a83106104665760010192915050565b600073ffffffffffffffffffffffffffffffffffffffff83161580159061134057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061130f575073ffffffffffffffffffffffffffffffffffffffff80851660009081526005602090815260408083209387168352929052205460ff165b80611340575060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8216611398576040517f64a0ae920000000000000000000000000000000000000000000000000000000081526000600482015260240161058f565b60006113a683836000610954565b905073ffffffffffffffffffffffffffffffffffffffff8116156106cd576040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526000600482015260240161058f565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461074a57600080fd5b60006020828403121561143957600080fd5b81356108e1816113f9565b60005b8381101561145f578181015183820152602001611447565b50506000910152565b60008151808452611480816020860160208601611444565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108e16020830184611468565b6000602082840312156114d757600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461150257600080fd5b919050565b6000806040838503121561151a57600080fd5b611523836114de565b946020939093013593505050565b60008060006060848603121561154657600080fd5b61154f846114de565b925061155d602085016114de565b9150604084013590509250925092565b6000806020838503121561158057600080fd5b823567ffffffffffffffff8082111561159857600080fd5b818501915085601f8301126115ac57600080fd5b8135818111156115bb57600080fd5b8660208285010111156115cd57600080fd5b60209290920196919550909350505050565b6000602082840312156115f157600080fd5b6108e1826114de565b6000806040838503121561160d57600080fd5b611616836114de565b91506020830135801515811461162b57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561167b57600080fd5b611684856114de565b9350611692602086016114de565b925060408501359150606085013567ffffffffffffffff808211156116b657600080fd5b818701915087601f8301126116ca57600080fd5b8135818111156116dc576116dc611636565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561172257611722611636565b816040528281528a602084870101111561173b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561177257600080fd5b61177b836114de565b9150611789602084016114de565b90509250929050565b600181811c908216806117a657607f821691505b6020821081036117df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156106cd576000816000526020600020601f850160051c8101602086101561180e5750805b601f850160051c820191505b8181101561182d5782815560010161181a565b505050505050565b67ffffffffffffffff83111561184d5761184d611636565b6118618361185b8354611792565b836117e5565b6000601f8411600181146118b3576000851561187d5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610e39565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561190257868501358255602094850194600190920191016118e2565b508682101561193d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b60008351611961818460208801611444565b835190830190611975818360208801611444565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526119bd6080830184611468565b9695505050505050565b6000602082840312156119d957600080fd5b81516108e1816113f956fea164736f6c6343000817000a";

type TokenWrappedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenWrappedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenWrapped__factory extends ContractFactory {
  constructor(...args: TokenWrappedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      TokenWrapped & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenWrapped__factory {
    return super.connect(runner) as TokenWrapped__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenWrappedInterface {
    return new Interface(_abi) as TokenWrappedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenWrapped {
    return new Contract(address, _abi, runner) as unknown as TokenWrapped;
  }
}
