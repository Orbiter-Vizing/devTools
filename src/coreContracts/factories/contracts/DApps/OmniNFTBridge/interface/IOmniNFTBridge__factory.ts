/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOmniNFTBridge,
  IOmniNFTBridgeInterface,
} from "../../../../../contracts/DApps/OmniNFTBridge/interface/IOmniNFTBridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "originChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "originTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wrappedTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "NewWrappedToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "companionMessage",
        type: "bytes",
      },
    ],
    name: "bridgeAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "companionMessage",
        type: "bytes",
      },
    ],
    name: "fetchBridgeAssetDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encodedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainId",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "originChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "originTokenAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "predictNFTAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IOmniNFTBridge__factory {
  static readonly abi = _abi;
  static createInterface(): IOmniNFTBridgeInterface {
    return new Interface(_abi) as IOmniNFTBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOmniNFTBridge {
    return new Contract(address, _abi, runner) as unknown as IOmniNFTBridge;
  }
}
