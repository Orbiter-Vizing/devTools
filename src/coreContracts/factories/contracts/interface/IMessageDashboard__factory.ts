/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMessageDashboard,
  IMessageDashboardInterface,
} from "../../../contracts/interface/IMessageDashboard";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "stop",
        type: "bool",
      },
    ],
    name: "PauseEngine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "engineState",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "padState",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "states",
        type: "bool[]",
      },
    ],
    name: "roleConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1[]",
        name: "ids",
        type: "bytes1[]",
      },
      {
        internalType: "address[]",
        name: "hooks",
        type: "address[]",
      },
    ],
    name: "setExpertLandingHooks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1[]",
        name: "ids",
        type: "bytes1[]",
      },
      {
        internalType: "address[]",
        name: "hooks",
        type: "address[]",
      },
    ],
    name: "setExpertLaunchHooks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasSystemAddress",
        type: "address",
      },
    ],
    name: "setGasSystem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "states",
        type: "bool[]",
      },
    ],
    name: "stationAdminSetRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMessageDashboard__factory {
  static readonly abi = _abi;
  static createInterface(): IMessageDashboardInterface {
    return new Interface(_abi) as IMessageDashboardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMessageDashboard {
    return new Contract(address, _abi, runner) as unknown as IMessageDashboard;
  }
}
