/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IExpertHookTransfer,
  IExpertHookTransferInterface,
} from "../../../../contracts/interface/IExpertHook.sol/IExpertHookTransfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "reveiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tokenTransferByHook",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IExpertHookTransfer__factory {
  static readonly abi = _abi;
  static createInterface(): IExpertHookTransferInterface {
    return new Interface(_abi) as IExpertHookTransferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IExpertHookTransfer {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IExpertHookTransfer;
  }
}
