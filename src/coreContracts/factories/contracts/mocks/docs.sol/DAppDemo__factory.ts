/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DAppDemo,
  DAppDemoInterface,
} from "../../../../contracts/mocks/docs.sol/DAppDemo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vizingPad",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LandingPadAccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplement",
    type: "error",
  },
  {
    inputs: [],
    name: "LandingPad",
    outputs: [
      {
        internalType: "contract IMessageChannel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LaunchPad",
    outputs: [
      {
        internalType: "contract IMessageChannel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "mode",
        type: "bytes1",
      },
      {
        internalType: "bytes1",
        name: "tokenSymbol",
        type: "bytes1",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PacketAdditionParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "mode",
        type: "bytes1",
      },
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "gasLimit",
        type: "uint24",
      },
      {
        internalType: "uint64",
        name: "price",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "PacketMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1[]",
        name: "mode",
        type: "bytes1[]",
      },
      {
        internalType: "address[]",
        name: "targetContract",
        type: "address[]",
      },
      {
        internalType: "uint24[]",
        name: "gasLimit",
        type: "uint24[]",
      },
      {
        internalType: "uint64[]",
        name: "price",
        type: "uint64[]",
      },
      {
        internalType: "bytes[]",
        name: "message",
        type: "bytes[]",
      },
    ],
    name: "PacketMessages",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainid",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "computeTradeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultBridgeMode",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "earliestArrivalTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestArrivalTimestamp",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "destChainid",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "additionParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "emit2LaunchPad",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "destChainid",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "additionParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "estimateVizingGasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "vizingGasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainid",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "exactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainid",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "exactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxArrivalTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxGasLimit",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minArrivalTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minGasLimit",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "srcChainId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "srcContract",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "receiveStandardMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "selectedRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161156a38038061156a83398101604081905261002f9161005f565b600080546001600160a01b03929092166001600160a01b031992831681179091556001805490921617905561008f565b60006020828403121561007157600080fd5b81516001600160a01b038116811461008857600080fd5b9392505050565b6114cc8061009e6000396000f3fe60806040526004361061010d5760003560e01c806376c81312116100a5578063c23d113811610074578063de8aeda011610059578063de8aeda0146101ab578063e0b838e9146102b6578063fd39aa44146102e357600080fd5b8063c23d113814610276578063cb2bfa931461029657600080fd5b806376c81312146101f55780638aa7186914610215578063b0cfd4d214610235578063b36857411461024957600080fd5b8063589301d3116100e1578063589301d3146101c75780635ad3ad06146101ab5780635aeb4d77146101ab5780635e45da23146101ab57600080fd5b806273b555146101125780630e82845d14610127578063424170231461017e57806345636279146101ab575b600080fd5b610125610120366004610ac0565b6102f6565b005b34801561013357600080fd5b506001546101549073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561018a57600080fd5b5061019e610199366004610b6f565b610359565b6040516101759190610c3d565b3480156101b757600080fd5b5060405160008152602001610175565b3480156101d357600080fd5b506101e76101e2366004610c50565b6103e9565b604051908152602001610175565b34801561020157600080fd5b506101e7610210366004610c7a565b610524565b34801561022157600080fd5b5061019e610230366004610e23565b6105a6565b34801561024157600080fd5b506000610154565b34801561025557600080fd5b506102696102643660046110e8565b6105d7565b60405161017591906111ad565b34801561028257600080fd5b506101e7610291366004610c50565b6106f1565b3480156102a257600080fd5b506101e76102b1366004610c50565b6107e8565b3480156102c257600080fd5b506000546101549073ffffffffffffffffffffffffffffffffffffffff1681565b6101256102f136600461122f565b6108df565b60015473ffffffffffffffffffffffffffffffffffffffff163314610347576040517ffb2541ea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035384848484610981565b50505050565b6040517fff00000000000000000000000000000000000000000000000000000000000000868116602083015285166021820152606084811b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116602284015284821b166036830152604a820183905290606a015b604051602081830303815290604052905095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384bc75a66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b91906112f4565b6040517f589301d300000000000000000000000000000000000000000000000000000000815267ffffffffffffffff851660048201526024810184905273ffffffffffffffffffffffffffffffffffffffff919091169063589301d3906044015b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190611311565b9392505050565b600061059b878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284376000920191909152506109b392505050565b979650505050505050565b6060858573ffffffffffffffffffffffffffffffffffffffff168585856040516020016103cf95949392919061132a565b60606000825167ffffffffffffffff8111156105f5576105f5610d17565b60405190808252806020026020018201604052801561062857816020015b60608152602001906001900390816106135790505b50905060005b83518110156106e6576106c188828151811061064c5761064c6113d1565b6020026020010151888381518110610666576106666113d1565b6020026020010151888481518110610680576106806113d1565b602002602001015188858151811061069a5761069a6113d1565b60200260200101518886815181106106b4576106b46113d1565b60200260200101516105a6565b8282815181106106d3576106d36113d1565b602090810291909101015260010161062e565b509695505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384bc75a66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078391906112f4565b6040517fc23d113800000000000000000000000000000000000000000000000000000000815267ffffffffffffffff851660048201526024810184905273ffffffffffffffffffffffffffffffffffffffff919091169063c23d1138906044016104dc565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384bc75a66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087a91906112f4565b6040517fcb2bfa9300000000000000000000000000000000000000000000000000000000815267ffffffffffffffff851660048201526024810184905273ffffffffffffffffffffffffffffffffffffffff919091169063cb2bfa93906044016104dc565b6000546040517f209afe5600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063209afe56903490610945908c908c908c908c908c908c908c908c90600401611400565b6000604051808303818588803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b50505050505050505050505050565b6040517fff94113200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080546040517f85fdd54200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906385fdd54290610a10908890889088908890600401611484565b602060405180830381865afa158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a519190611311565b95945050505050565b803567ffffffffffffffff81168114610a7257600080fd5b919050565b60008083601f840112610a8957600080fd5b50813567ffffffffffffffff811115610aa157600080fd5b602083019150836020828501011115610ab957600080fd5b9250929050565b60008060008060608587031215610ad657600080fd5b610adf85610a5a565b935060208501359250604085013567ffffffffffffffff811115610b0257600080fd5b610b0e87828801610a77565b95989497509550505050565b80357fff0000000000000000000000000000000000000000000000000000000000000081168114610a7257600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610b6c57600080fd5b50565b600080600080600060a08688031215610b8757600080fd5b610b9086610b1a565b9450610b9e60208701610b1a565b93506040860135610bae81610b4a565b92506060860135610bbe81610b4a565b949793965091946080013592915050565b60005b83811015610bea578181015183820152602001610bd2565b50506000910152565b60008151808452610c0b816020860160208601610bcf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061051d6020830184610bf3565b60008060408385031215610c6357600080fd5b610c6c83610a5a565b946020939093013593505050565b60008060008060008060808789031215610c9357600080fd5b86359550610ca360208801610a5a565b9450604087013567ffffffffffffffff80821115610cc057600080fd5b610ccc8a838b01610a77565b90965094506060890135915080821115610ce557600080fd5b50610cf289828a01610a77565b979a9699509497509295939492505050565b803562ffffff81168114610a7257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d8d57610d8d610d17565b604052919050565b600082601f830112610da657600080fd5b813567ffffffffffffffff811115610dc057610dc0610d17565b610df160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610d46565b818152846020838601011115610e0657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e3b57600080fd5b610e4486610b1a565b94506020860135610e5481610b4a565b9350610e6260408701610d04565b9250610e7060608701610a5a565b9150608086013567ffffffffffffffff811115610e8c57600080fd5b610e9888828901610d95565b9150509295509295909350565b600067ffffffffffffffff821115610ebf57610ebf610d17565b5060051b60200190565b600082601f830112610eda57600080fd5b81356020610eef610eea83610ea5565b610d46565b8083825260208201915060208460051b870101935086841115610f1157600080fd5b602086015b848110156106e657610f2781610b1a565b8352918301918301610f16565b600082601f830112610f4557600080fd5b81356020610f55610eea83610ea5565b8083825260208201915060208460051b870101935086841115610f7757600080fd5b602086015b848110156106e6578035610f8f81610b4a565b8352918301918301610f7c565b600082601f830112610fad57600080fd5b81356020610fbd610eea83610ea5565b8083825260208201915060208460051b870101935086841115610fdf57600080fd5b602086015b848110156106e657610ff581610d04565b8352918301918301610fe4565b600082601f83011261101357600080fd5b81356020611023610eea83610ea5565b8083825260208201915060208460051b87010193508684111561104557600080fd5b602086015b848110156106e65761105b81610a5a565b835291830191830161104a565b600082601f83011261107957600080fd5b81356020611089610eea83610ea5565b82815260059290921b840181019181810190868411156110a857600080fd5b8286015b848110156106e657803567ffffffffffffffff8111156110cc5760008081fd5b6110da8986838b0101610d95565b8452509183019183016110ac565b600080600080600060a0868803121561110057600080fd5b853567ffffffffffffffff8082111561111857600080fd5b61112489838a01610ec9565b9650602088013591508082111561113a57600080fd5b61114689838a01610f34565b9550604088013591508082111561115c57600080fd5b61116889838a01610f9c565b9450606088013591508082111561117e57600080fd5b61118a89838a01611002565b935060808801359150808211156111a057600080fd5b50610e9888828901611068565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015611222577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611210858351610bf3565b945092850192908501906001016111d6565b5092979650505050505050565b600080600080600080600080610100898b03121561124c57600080fd5b61125589610a5a565b975061126360208a01610a5a565b9650604089013561127381610b4a565b9550606089013561128381610b4a565b94506080890135935061129860a08a01610a5a565b925060c089013567ffffffffffffffff808211156112b557600080fd5b6112c18c838d01610d95565b935060e08b01359150808211156112d757600080fd5b506112e48b828c01610d95565b9150509295985092959890939650565b60006020828403121561130657600080fd5b815161051d81610b4a565b60006020828403121561132357600080fd5b5051919050565b7fff00000000000000000000000000000000000000000000000000000000000000861681528460018201527fffffff00000000000000000000000000000000000000000000000000000000008460e81b1660218201527fffffffffffffffff0000000000000000000000000000000000000000000000008360c01b166024820152600082516113c081602c850160208701610bcf565b91909101602c019695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b67ffffffffffffffff8981168252888116602083015273ffffffffffffffffffffffffffffffffffffffff88811660408401528716606083015260808201869052841660a082015261010060c0820181905260009061146183820186610bf3565b905082810360e08401526114758185610bf3565b9b9a5050505050505050505050565b84815267ffffffffffffffff841660208201526080604082015260006114ad6080830185610bf3565b828103606084015261059b8185610bf356fea164736f6c6343000817000a";

type DAppDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAppDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAppDemo__factory extends ContractFactory {
  constructor(...args: DAppDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vizingPad: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_vizingPad, overrides || {});
  }
  override deploy(
    _vizingPad: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_vizingPad, overrides || {}) as Promise<
      DAppDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAppDemo__factory {
    return super.connect(runner) as DAppDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAppDemoInterface {
    return new Interface(_abi) as DAppDemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAppDemo {
    return new Contract(address, _abi, runner) as unknown as DAppDemo;
  }
}
