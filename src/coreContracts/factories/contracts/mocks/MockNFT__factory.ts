/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockNFT,
  MockNFTInterface,
} from "../../../contracts/mocks/MockNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "CreateNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024b3380380620024b383398101604081905262000034916200021c565b808484600062000045838262000360565b50600162000054828262000360565b5050506001600160a01b0381166200008757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200009281620000b5565b50600a805460ff60a01b19169055620000ab8262000107565b505050506200042c565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200011162000123565b600b6200011f828262000360565b5050565b600a546001600160a01b03163314620001525760405163118cdaa760e01b81523360048201526024016200007e565b565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017c57600080fd5b81516001600160401b038082111562000199576200019962000154565b604051601f8301601f19908116603f01168101908282118183101715620001c457620001c462000154565b8160405283815260209250866020858801011115620001e257600080fd5b600091505b83821015620002065785820183015181830184015290820190620001e7565b6000602085830101528094505050505092915050565b600080600080608085870312156200023357600080fd5b84516001600160401b03808211156200024b57600080fd5b62000259888389016200016a565b955060208701519150808211156200027057600080fd5b6200027e888389016200016a565b945060408701519150808211156200029557600080fd5b50620002a4878288016200016a565b606087015190935090506001600160a01b0381168114620002c457600080fd5b939692955090935050565b600181811c90821680620002e457607f821691505b6020821081036200030557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035b576000816000526020600020601f850160051c81016020861015620003365750805b601f850160051c820191505b81811015620003575782815560010162000342565b5050505b505050565b81516001600160401b038111156200037c576200037c62000154565b62000394816200038d8454620002cf565b846200030b565b602080601f831160018114620003cc5760008415620003b35750858301515b600019600386901b1c1916600185901b17855562000357565b600085815260208120601f198616915b82811015620003fd57888601518255948401946001909101908401620003dc565b50858210156200041c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612077806200043c6000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806359a7715a116100ee57806395d89b4111610097578063c87b56dd11610071578063c87b56dd1461036e578063d547cfb714610381578063e985e9c514610389578063f2fde38b146103d257600080fd5b806395d89b4114610340578063a22cb46514610348578063b88d4fde1461035b57600080fd5b806370a08231116100c857806370a0823114610307578063715018a61461031a5780638da5cb5b1461032257600080fd5b806359a7715a146102c95780635c975abb146102d15780636352211e146102f457600080fd5b80632f745c591161015057806342966c681161012a57806342966c68146102905780634f6ccce7146102a357806355f804b3146102b657600080fd5b80632f745c591461025757806340c10f191461026a57806342842e0e1461027d57600080fd5b8063095ea7b311610181578063095ea7b31461021d57806318160ddd1461023257806323b872dd1461024457600080fd5b806301ffc9a7146101a857806306fdde03146101d0578063081812fc146101e5575b600080fd5b6101bb6101b63660046119e8565b6103e5565b60405190151581526020015b60405180910390f35b6101d86103f6565b6040516101c79190611a73565b6101f86101f3366004611a86565b610488565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b61023061022b366004611ac8565b6104be565b005b6008545b6040519081526020016101c7565b610230610252366004611af2565b6104cd565b610236610265366004611ac8565b6105c3565b610230610278366004611ac8565b61065b565b61023061028b366004611af2565b61067c565b61023061029e366004611a86565b610697565b6102366102b1366004611a86565b6106a3565b6102306102c4366004611bf1565b610715565b610236610729565b600a5474010000000000000000000000000000000000000000900460ff166101bb565b6101f8610302366004611a86565b610739565b610236610315366004611c3a565b610744565b6102306107bf565b600a5473ffffffffffffffffffffffffffffffffffffffff166101f8565b6101d86107d3565b610230610356366004611c55565b6107e2565b610230610369366004611c91565b6107ed565b6101d861037c366004611a86565b610804565b6101d861086c565b6101bb610397366004611d0d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102306103e0366004611c3a565b6108fa565b60006103f08261095e565b92915050565b60606000805461040590611d40565b80601f016020809104026020016040519081016040528092919081815260200182805461043190611d40565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050505050905090565b6000610493826109b4565b5060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff166103f0565b6104c9828233610a13565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216610522576040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b600061052f838333610a20565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80861660048301526024820184905282166044820152606401610519565b50505050565b60006105ce83610744565b8210610625576040517fa57d13dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101839052604401610519565b5073ffffffffffffffffffffffffffffffffffffffff919091166000908152600660209081526040808320938352929052205490565b60005b818110156106775761066f83610a35565b60010161065e565b505050565b610677838383604051806020016040528060008152506107ed565b6104c960008233610a20565b60006106ae60085490565b82106106f0576040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526000600482015260248101839052604401610519565b6008828154811061070357610703611d93565b90600052602060002001549050919050565b61071d610a90565b600b6104c98282611e12565b6000610734600c5490565b905090565b60006103f0826109b4565b600073ffffffffffffffffffffffffffffffffffffffff8216610796576040517f89c62b6400000000000000000000000000000000000000000000000000000000815260006004820152602401610519565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6107c7610a90565b6107d16000610ae3565b565b60606001805461040590611d40565b6104c9338383610b5a565b6107f88484846104cd565b6105bd84848484610c57565b606061080f826109b4565b50600061081a610e4e565b9050600081511161083a5760405180602001604052806000815250610865565b8061084484610e5d565b604051602001610855929190611f2c565b6040516020818303038152906040525b9392505050565b600b805461087990611d40565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590611d40565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b505050505081565b610902610a90565b73ffffffffffffffffffffffffffffffffffffffff8116610952576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610519565b61095b81610ae3565b50565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f780e9d630000000000000000000000000000000000000000000000000000000014806103f057506103f082610f1b565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103f0576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101849052602401610519565b6106778383836001610ffe565b6000610a2d8484846111c9565b949350505050565b6000610a40600c5490565b600c80549192506000610a5283611f8a565b9190505550610a6182826111de565b60405181907ffc8f2896a026fe67cf7750939518a86f80d8740522b220a53c353e741f706fd590600090a25050565b600a5473ffffffffffffffffffffffffffffffffffffffff1633146107d1576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610519565b600a805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610bbf576040517f5b08ba1800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610519565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83163b156105bd576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063150b7a0290610ccc903390889087908790600401611fc2565b6020604051808303816000875af1925050508015610d25575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d229181019061200b565b60015b610db4573d808015610d53576040519150601f19603f3d011682016040523d82523d6000602084013e610d58565b606091505b508051600003610dac576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610519565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f150b7a020000000000000000000000000000000000000000000000000000000014610e47576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610519565b5050505050565b6060600b805461040590611d40565b60606000610e6a836111f8565b600101905060008167ffffffffffffffff811115610e8a57610e8a611b2e565b6040519080825280601f01601f191660200182016040528015610eb4576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610ebe57509392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd000000000000000000000000000000000000000000000000000000001480610fae57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103f057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146103f0565b808061101f575073ffffffffffffffffffffffffffffffffffffffff821615155b1561117457600061102f846109b4565b905073ffffffffffffffffffffffffffffffffffffffff83161580159061108257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110c1575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209387168352929052205460ff16155b15611110576040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610519565b811561117257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006111d36112da565b610a2d84848461132f565b6104c982826040518060200160405280600081525061144a565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611241577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061126d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061128b57662386f26fc10000830492506010015b6305f5e10083106112a3576305f5e100830492506008015b61271083106112b757612710830492506004015b606483106112c9576064830492506002015b600a83106103f05760010192915050565b600a5474010000000000000000000000000000000000000000900460ff16156107d1576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061133d858585611461565b905073ffffffffffffffffffffffffffffffffffffffff81166113a7576113a284600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6113e4565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113e4576113e481856115de565b73ffffffffffffffffffffffffffffffffffffffff851661140d5761140884611689565b610a2d565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a2d57610a2d8585611738565b6114548383611795565b6106776000848484610c57565b60008281526002602052604081205473ffffffffffffffffffffffffffffffffffffffff9081169083161561149b5761149b818486611846565b73ffffffffffffffffffffffffffffffffffffffff811615611511576114c5600085600080610ffe565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b73ffffffffffffffffffffffffffffffffffffffff85161561155a5773ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260409020805460010190555b60008481526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff89811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b60006115e983610744565b6000838152600760205260409020549091508082146116495773ffffffffffffffffffffffffffffffffffffffff841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b50600091825260076020908152604080842084905573ffffffffffffffffffffffffffffffffffffffff9094168352600681528383209183525290812055565b60085460009061169b90600190612028565b600083815260096020526040812054600880549394509092849081106116c3576116c3611d93565b9060005260206000200154905080600883815481106116e4576116e4611d93565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061171c5761171c61203b565b6001900381819060005260206000200160009055905550505050565b6000600161174584610744565b61174f9190612028565b73ffffffffffffffffffffffffffffffffffffffff9093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b73ffffffffffffffffffffffffffffffffffffffff82166117e5576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610519565b60006117f383836000610a20565b905073ffffffffffffffffffffffffffffffffffffffff811615610677576040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260006004820152602401610519565b6118518383836118f6565b6106775773ffffffffffffffffffffffffffffffffffffffff83166118a5576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101829052602401610519565b6040517f177e802f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101829052604401610519565b600073ffffffffffffffffffffffffffffffffffffffff831615801590610a2d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611984575073ffffffffffffffffffffffffffffffffffffffff80851660009081526005602090815260408083209387168352929052205460ff165b80610a2d57505060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff908116911614919050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461095b57600080fd5b6000602082840312156119fa57600080fd5b8135610865816119ba565b60005b83811015611a20578181015183820152602001611a08565b50506000910152565b60008151808452611a41816020860160208601611a05565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108656020830184611a29565b600060208284031215611a9857600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ac357600080fd5b919050565b60008060408385031215611adb57600080fd5b611ae483611a9f565b946020939093013593505050565b600080600060608486031215611b0757600080fd5b611b1084611a9f565b9250611b1e60208501611a9f565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611b7857611b78611b2e565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611bbe57611bbe611b2e565b81604052809350858152868686011115611bd757600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611c0357600080fd5b813567ffffffffffffffff811115611c1a57600080fd5b8201601f81018413611c2b57600080fd5b610a2d84823560208401611b5d565b600060208284031215611c4c57600080fd5b61086582611a9f565b60008060408385031215611c6857600080fd5b611c7183611a9f565b915060208301358015158114611c8657600080fd5b809150509250929050565b60008060008060808587031215611ca757600080fd5b611cb085611a9f565b9350611cbe60208601611a9f565b925060408501359150606085013567ffffffffffffffff811115611ce157600080fd5b8501601f81018713611cf257600080fd5b611d0187823560208401611b5d565b91505092959194509250565b60008060408385031215611d2057600080fd5b611d2983611a9f565b9150611d3760208401611a9f565b90509250929050565b600181811c90821680611d5457607f821691505b602082108103611d8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b601f821115610677576000816000526020600020601f850160051c81016020861015611deb5750805b601f850160051c820191505b81811015611e0a57828155600101611df7565b505050505050565b815167ffffffffffffffff811115611e2c57611e2c611b2e565b611e4081611e3a8454611d40565b84611dc2565b602080601f831160018114611e935760008415611e5d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611e0a565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611ee057888601518255948401946001909101908401611ec1565b5085821015611f1c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611f3e818460208801611a05565b835190830190611f52818360208801611a05565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fbb57611fbb611f5b565b5060010190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526120016080830184611a29565b9695505050505050565b60006020828403121561201d57600080fd5b8151610865816119ba565b818103818111156103f0576103f0611f5b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c6343000817000a";

type MockNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNFT__factory extends ContractFactory {
  constructor(...args: MockNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    baseURI: string,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      baseURI,
      _initialOwner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    baseURI: string,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      baseURI,
      _initialOwner,
      overrides || {}
    ) as Promise<
      MockNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockNFT__factory {
    return super.connect(runner) as MockNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNFTInterface {
    return new Interface(_abi) as MockNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockNFT {
    return new Contract(address, _abi, runner) as unknown as MockNFT;
  }
}
