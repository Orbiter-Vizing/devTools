/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Create3,
  Create3Interface,
} from "../../../../../@axelar-network/axelar-gmp-sdk-solidity/contracts/deploy/Create3";

const _abi = [
  {
    inputs: [],
    name: "AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "DeployFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyBytecode",
    type: "error",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b50604051601d602082016040565b601f1982820381018352601f90910116604052805160209190910120608052604d565b6101778061007983390190565b60805160166100636000396000505060166000f3fe6080604052600080fdfea164736f6c6343000817000a608060405234801561001057600080fd5b50610157806100206000396000f3fe60806040526004361061001d5760003560e01c806277436014610022575b600080fd5b61003561003036600461007b565b610037565b005b8051602082016000f061004957600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561008d57600080fd5b813567ffffffffffffffff808211156100a557600080fd5b818401915084601f8301126100b957600080fd5b8135818111156100cb576100cb61004c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101115761011161004c565b8160405282815287602084870101111561012a57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea164736f6c6343000817000a";

type Create3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Create3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Create3__factory extends ContractFactory {
  constructor(...args: Create3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Create3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Create3__factory {
    return super.connect(runner) as Create3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Create3Interface {
    return new Interface(_abi) as Create3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): Create3 {
    return new Contract(address, _abi, runner) as unknown as Create3;
  }
}
