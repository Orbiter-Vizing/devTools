/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICREATE3Factory,
  ICREATE3FactoryInterface,
} from "../../../../@SKYBITDev3/ZeframLou-create3-factory/src/ICREATE3Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "creationCode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "deployed",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getDeployed",
    outputs: [
      {
        internalType: "address",
        name: "deployed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICREATE3Factory__factory {
  static readonly abi = _abi;
  static createInterface(): ICREATE3FactoryInterface {
    return new Interface(_abi) as ICREATE3FactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICREATE3Factory {
    return new Contract(address, _abi, runner) as unknown as ICREATE3Factory;
  }
}
